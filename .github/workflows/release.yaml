---
name: Release

on:
  push:
    branches: [main]

concurrency:
  group: release

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yaml

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          cache: poetry
      - name: Poetry install
        run: poetry install
      - name: Find version
        id: version
        uses: open-turo/actions-release/semantic-release@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: true
          ci: false
      - name: Release check
        if: steps.version.outputs.new-release-published != 'true'
        run: |
          echo "::notice:: No new release version!"
          exit 1
      - name: Update version
        shell: bash
        run: poetry version "${{ steps.version.outputs.new-release-version }}"
      - name: Commit & push version
        uses: actions-js/push@master
        with:
          message: "chore: ${{ steps.version.outputs.new-release-version }} [skip actions]"
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Poetry build
        run: poetry build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Release
        uses: open-turo/actions-release/semantic-release@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
